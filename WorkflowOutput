Started by user Atharva Kishor Matale

[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins
 in /var/lib/jenkins/workspace/FlaskApp1
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone GitHub Repo)
[Pipeline] echo
Cloning repository: https://github.com/AtharvaKishorMatale/stud-reg-flask-app.git
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/FlaskApp1/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/AtharvaKishorMatale/stud-reg-flask-app.git # timeout=10
Fetching upstream changes from https://github.com/AtharvaKishorMatale/stud-reg-flask-app.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
 > git fetch --tags --force --progress -- https://github.com/AtharvaKishorMatale/stud-reg-flask-app.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision cd85ee9ba60b202ca700f6903ec53154db4da594 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cd85ee9ba60b202ca700f6903ec53154db4da594 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master cd85ee9ba60b202ca700f6903ec53154db4da594 # timeout=10
Commit message: "Update app.py"
 > git rev-list --no-walk cd85ee9ba60b202ca700f6903ec53154db4da594 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Virtual Environment)
[Pipeline] echo
Creating Python virtual environment...
[Pipeline] sh
+ python3 -m venv venv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Install Dependencies)
[Pipeline] echo
Upgrading pip...
[Pipeline] sh
+ ./venv/bin/pip install --upgrade pip
Requirement already satisfied: pip in ./venv/lib/python3.12/site-packages (25.1.1)
[Pipeline] echo
Installing Flask and MySQL connector from requirements.txt...
[Pipeline] sh
+ ./venv/bin/pip install -r requirements.txt
Requirement already satisfied: Flask==2.3.2 in ./venv/lib/python3.12/site-packages (from -r requirements.txt (line 1)) (2.3.2)
Requirement already satisfied: mysql-connector-python in ./venv/lib/python3.12/site-packages (from -r requirements.txt (line 2)) (9.4.0)
Requirement already satisfied: Werkzeug>=2.3.3 in ./venv/lib/python3.12/site-packages (from Flask==2.3.2->-r requirements.txt (line 1)) (3.1.3)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.12/site-packages (from Flask==2.3.2->-r requirements.txt (line 1)) (3.1.6)
Requirement already satisfied: itsdangerous>=2.1.2 in ./venv/lib/python3.12/site-packages (from Flask==2.3.2->-r requirements.txt (line 1)) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.12/site-packages (from Flask==2.3.2->-r requirements.txt (line 1)) (8.2.1)
Requirement already satisfied: blinker>=1.6.2 in ./venv/lib/python3.12/site-packages (from Flask==2.3.2->-r requirements.txt (line 1)) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.0 in ./venv/lib/python3.12/site-packages (from Jinja2>=3.1.2->Flask==2.3.2->-r requirements.txt (line 1)) (3.0.2)
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Run Flask App)
[Pipeline] echo
Attempting to kill any old Flask app processes to ensure clean start...
[Pipeline] sh
+ pkill -f app.py
+ true
[Pipeline] echo
Starting Flask app in background on port 5000...
[Pipeline] sh
+ echo 1675
+ nohup ./venv/bin/python3 app.py
[Pipeline] sh
+ sleep 15
[Pipeline] echo
Verifying Flask app process is running...
[Pipeline] sh
+ cat flask_app_pid.txt
+ FLASK_PID=1675
+ ps -p 1675
+ echo Flask app with PID 1675 is running.
Flask app with PID 1675 is running.
[Pipeline] echo
--- Flask app logs from startup (check for DB connection errors) ---
[Pipeline] sh
+ cat flask.log
 * Serving Flask app 'app'
 * Debug mode: off
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.20.243.27:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
[Pipeline] sh
+ echo -------------------------------------------------------------------
-------------------------------------------------------------------
[Pipeline] echo
Verifying Flask app is listening on port 5000 using 'ss'...
[Pipeline] sh
+ sudo ss -tulnp
+ grep 5000
tcp   LISTEN 0      128           0.0.0.0:5000       0.0.0.0:*    users:(("python3",pid=1675,fd=4))                                                                                                                                                                                                                                                                                 
[Pipeline] sh
+ echo Flask app confirmed listening on port 5000.
Flask app confirmed listening on port 5000.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Expose Port to Windows (via socat))
[Pipeline] echo
Attempting to kill any old socat processes...
[Pipeline] sh
+ pkill socat
+ true
[Pipeline] echo
Starting socat for port forwarding (5050 -> 5000)...
[Pipeline] sh
+ echo 1784
+ nohup socat TCP-LISTEN:5050,fork TCP:localhost:5000
[Pipeline] sh
+ sleep 10
[Pipeline] echo
Verifying socat process is running...
[Pipeline] sh
+ cat socat_pid.txt
+ SOCAT_PID=1784
+ ps -p 1784
+ echo Socat with PID 1784 is running.
Socat with PID 1784 is running.
[Pipeline] echo
--- Socat logs from startup ---
[Pipeline] sh
+ cat socat.log
[Pipeline] sh
+ echo -------------------------------
-------------------------------
[Pipeline] echo
Verifying socat is listening on port 5050 using 'ss'...
[Pipeline] sh
+ sudo ss -tulnp
+ grep 5050
tcp   LISTEN 0      5                   *:5050             *:*    users:(("socat",pid=1784,fd=5))                                                                                                                                                                                                                                                                                   
[Pipeline] sh
+ echo Socat confirmed listening on port 5050.
Socat confirmed listening on port 5050.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Application Access (from within Jenkins Agent))
[Pipeline] echo
Attempting to curl Flask app via socat from within the Jenkins agent...
[Pipeline] sh
+ curl -v http://127.0.0.1:5050
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:5050...
* Connected to 127.0.0.1 (127.0.0.1) port 5050
> GET / HTTP/1.1
> Host: 127.0.0.1:5050
> User-Agent: curl/8.5.0
> Accept: */*
> 
< HTTP/1.1 200 OK
< Server: Werkzeug/3.1.3 Python/3.12.3
< Date: Tue, 29 Jul 2025 06:08:15 GMT
< Content-Type: text/html; charset=utf-8
< Content-Length: 639
< Connection: close
< 
{ [639 bytes data]

100   639  100   639    0     0   176k      0 --:--:-- --:--:-- --:--:--  208k
* Closing connection
<!DOCTYPE html>
<html>
<head>
    <title>Register Student</title>
</head>
<body>
    <h2>Register Student</h2>
    <form method="post">
        <label>Name:</label><br><input type="text" name="name"><br>
        <label>Email:</label><br><input type="email" name="email"><br>
        <label>Phone:</label><br><input type="text" name="phone"><br>
        <label>Course:</label><br><input type="text" name="course"><br>
        <label>Address:</label><br><input type="text" name="address"><br>
        <label>Contact:</label><br><input type="text" name="contact"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>
[Pipeline] echo
Application accessible via socat from within Jenkins agent. This confirms internal connectivity.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
